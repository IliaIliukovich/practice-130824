1. Создать Consumer, который принимает числа и печатает четные числа в поток System.out, а нечетные числа в System.err.
2. Создать BiFunction, которая возводит первый аргумент типа int в степень второго аргумента типа int
3. Создать Supplier randomJoke, который выдает пользователю случайный анекдот из заготовленного исходного списка анекдотов.
4. Создать Predicate isYellowMonkey, который проверяет, желтого ли цвета обезьянка Monkey.
5. Написать метод, который на вход принимает два массива одинакового размера типа Integer и функцию.
 Метод возвращает массив, в котором хранятся результаты попарных вычислений согласно переданной функции.
6. Написать метод, который на вход принимает список String и производит фильтрацию данных согласно реализации
интерфейса Filter (например, через лямбда-выражение)
Интерфейс Filter имеет метод apply (String data), с помощью которого можно будет указывать способ фильтрации.
interface Filter {
  boolean apply(String data);
}
Отфильтрованные данные возвращаются в новом списке.


() -> ()

() -> data --- Supplier
(data) -> () ---- Consumer
(data1) -> (data2) --- Function --- Operator
(data1, data2) --> (data3) --- BiFunction --- BinaryOperator
(data) ---> boolean ---- Predicate
